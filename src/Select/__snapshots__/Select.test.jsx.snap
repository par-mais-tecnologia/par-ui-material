// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Select shallow Select match Snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Select
    error={false}
    errorMessage=""
    id="1"
    required={false}
    showError={true}
    showLabel={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "aria-describedby": "select-form-control",
      "children": Array [
        <WithStyles(InputLabel)
          htmlFor="1"
        />,
        <WithStyles(Select)
          error={false}
          id="1"
          inputProps={
            Object {
              "id": Object {
                "id": "1",
              },
              "name": undefined,
            }
          }
          onChange={[Function]}
          onClose={[Function]}
          onOpen={[Function]}
          open={false}
          required={false}
        />,
        "",
      ],
      "error": false,
      "required": false,
      "style": Object {
        "minWidth": "100%",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": undefined,
          "htmlFor": "1",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "error": false,
          "id": "1",
          "inputProps": Object {
            "id": Object {
              "id": "1",
            },
            "name": undefined,
          },
          "onChange": [Function],
          "onClose": [Function],
          "onOpen": [Function],
          "open": false,
          "required": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "",
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "aria-describedby": "select-form-control",
        "children": Array [
          <WithStyles(InputLabel)
            htmlFor="1"
          />,
          <WithStyles(Select)
            error={false}
            id="1"
            inputProps={
              Object {
                "id": Object {
                  "id": "1",
                },
                "name": undefined,
              }
            }
            onChange={[Function]}
            onClose={[Function]}
            onOpen={[Function]}
            open={false}
            required={false}
          />,
          "",
        ],
        "error": false,
        "required": false,
        "style": Object {
          "minWidth": "100%",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": undefined,
            "htmlFor": "1",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "error": false,
            "id": "1",
            "inputProps": Object {
              "id": Object {
                "id": "1",
              },
              "name": undefined,
            },
            "onChange": [Function],
            "onClose": [Function],
            "onOpen": [Function],
            "open": false,
            "required": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "",
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
