// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`E-mail shallow E-mail match Snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EmailInput
    errorMessage=""
    hasError={false}
    label="E-mail"
    required={false}
    showError={true}
    value=""
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "aria-describedby": "email-form-control",
      "children": Array [
        <TextField
          id="email-input"
          label="E-mail"
          margin="normal"
          onBlur={[Function]}
          required={false}
          select={false}
          value=""
        />,
        <WithStyles(FormHelperText)
          id="email-form-control"
        >
           
           
        </WithStyles(FormHelperText)>,
      ],
      "required": false,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "error": undefined,
          "id": "email-input",
          "label": "E-mail",
          "margin": "normal",
          "onBlur": [Function],
          "onChange": undefined,
          "required": false,
          "select": false,
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            " ",
            undefined,
            " ",
          ],
          "id": "email-form-control",
        },
        "ref": null,
        "rendered": Array [
          " ",
          undefined,
          " ",
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "aria-describedby": "email-form-control",
        "children": Array [
          <TextField
            id="email-input"
            label="E-mail"
            margin="normal"
            onBlur={[Function]}
            required={false}
            select={false}
            value=""
          />,
          <WithStyles(FormHelperText)
            id="email-form-control"
          >
             
             
          </WithStyles(FormHelperText)>,
        ],
        "required": false,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "error": undefined,
            "id": "email-input",
            "label": "E-mail",
            "margin": "normal",
            "onBlur": [Function],
            "onChange": undefined,
            "required": false,
            "select": false,
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              " ",
              undefined,
              " ",
            ],
            "id": "email-form-control",
          },
          "ref": null,
          "rendered": Array [
            " ",
            undefined,
            " ",
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
